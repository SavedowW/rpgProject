#include "MapLevel0.h"

MapLevel0::MapLevel0(int nLevelId) :
    MapLevel({ 640, 360 }, { 640, 360 }, nLevelId, GameCore::MUS_DUNGEON)
{
	//Spawn points
	spawnPoints.push_back({ 143.5, 228.5 });
	spawnPoints.push_back({ 384, 32 });

    //Objects
    Object* obj;
    activeObjects.push_back(player);

    obj = new Floor({ 128, 224 });
    staticObjects.push_back(obj);
    obj = new Floor({ 128, 256 });
    staticObjects.push_back(obj);
    obj = new Floor({ 160, 224 });
    staticObjects.push_back(obj);
    obj = new Floor({ 160, 256 });
    staticObjects.push_back(obj);
    obj = new Floor({ 160, 288 });
    staticObjects.push_back(obj);
    obj = new Floor({ 192, 288 });
    staticObjects.push_back(obj);
    obj = new Floor({ 224, 288 });
    staticObjects.push_back(obj);
    obj = new Floor({ 256, 288 });
    staticObjects.push_back(obj);
    obj = new Floor({ 288, 288 });
    staticObjects.push_back(obj);
    obj = new Floor_cLeft({ 128, 288 });
    staticObjects.push_back(obj);
    obj = new Floor_cRight({ 320, 288 });
    staticObjects.push_back(obj);
    obj = new Floor_cLeft({ 416, 288 });
    staticObjects.push_back(obj);
    obj = new Floor({ 416, 256 });
    staticObjects.push_back(obj);
    obj = new Floor({ 448, 256 });
    staticObjects.push_back(obj);
    obj = new Floor({ 256, 256 });
    staticObjects.push_back(obj);
    obj = new Floor({ 288, 256 });
    staticObjects.push_back(obj);
    obj = new Floor({ 320, 256 });
    staticObjects.push_back(obj);
    obj = new Floor({ 256, 224 });
    staticObjects.push_back(obj);
    obj = new Floor({ 288, 224 });
    staticObjects.push_back(obj);
    obj = new Floor({ 320, 224 });
    staticObjects.push_back(obj);
    obj = new Floor({ 352, 224 });
    staticObjects.push_back(obj);
    obj = new Floor({ 384, 224 });
    staticObjects.push_back(obj);
    obj = new Floor({ 416, 224 });
    staticObjects.push_back(obj);
    obj = new Floor({ 448, 224 });
    staticObjects.push_back(obj);
    obj = new Floor({ 256, 192 });
    staticObjects.push_back(obj);
    obj = new Floor({ 288, 192 });
    staticObjects.push_back(obj);
    obj = new Floor({ 320, 192 });
    staticObjects.push_back(obj);
    obj = new Floor({ 384, 192 });
    staticObjects.push_back(obj);
    obj = new Floor({ 352, 192 });
    staticObjects.push_back(obj);
    obj = new Floor({ 416, 192 });
    staticObjects.push_back(obj);
    obj = new Floor({ 448, 192 });
    staticObjects.push_back(obj);
    obj = new Floor_cRight({ 448, 288 });
    staticObjects.push_back(obj);
    obj = new Floor({ 384, 160 });
    staticObjects.push_back(obj);
    obj = new Floor({ 384, 128 });
    staticObjects.push_back(obj);
    obj = new Floor({ 384, 96 });
    staticObjects.push_back(obj);
    obj = new Floor({ 384, 64 });
    staticObjects.push_back(obj);
    obj = new Floor({ 384, 32 });
    staticObjects.push_back(obj);
    obj = new Floor({ 384, 0 });
    staticObjects.push_back(obj);
    obj = new Wall_bottom({ 320, 160 });
    staticObjects.push_back(obj);
    obj = new Wall_bottom({ 288, 160 });
    staticObjects.push_back(obj);
    obj = new Wall_cLeftIn_bottom({ 128, 192 });
    staticObjects.push_back(obj);
    obj = new Wall_cLeftIn_bottom({ 256, 160 });
    staticObjects.push_back(obj);
    obj = new Wall_cRightOut_top({ 352, 128 });
    staticObjects.push_back(obj);
    obj = new Wall_top({ 288, 128 });
    staticObjects.push_back(obj);
    obj = new Wall_cLeftOut_top({ 416, 128 });
    staticObjects.push_back(obj);
    obj = new Wall_top({ 320, 128 });
    staticObjects.push_back(obj);
    obj = new Wall_cLeftIn_top({ 256, 128 });
    staticObjects.push_back(obj);
    obj = new Wall_cRightIn_top({ 448, 128 });
    staticObjects.push_back(obj);
    obj = new Monitor({ 292, 148 }, *textureList);
    staticObjects.push_back(obj);
    obj = new Wall_cRightIn_bottom({ 448, 160 });
    staticObjects.push_back(obj);
    obj = new Wall_cRightIn_top({ 160, 160 });
    staticObjects.push_back(obj);
    obj = new Wall_cRightOut_bottom({ 352, 160 });
    staticObjects.push_back(obj);
    obj = new Wall_cLeftIn_top({ 128, 160 });
    staticObjects.push_back(obj);
    obj = new Wall_cLeftOut_bottom({ 416, 160 });
    staticObjects.push_back(obj);
    obj = new Trashcan1({ 256, 192 }, { BuildItem(ITEMLIST::ITEM_JUNK), BuildItem(ITEMLIST::ITEM_APPLE), BuildItem(ITEMLIST::ITEM_JUNK), BuildItem(ITEMLIST::ITEM_JUNK), BuildItem(ITEMLIST::ITEM_EXCALIBUR_RUSTY) });
    staticObjects.push_back(obj);
    chests.push_back((Chest*)obj);
    obj = new Wall_cRightIn_bottom({ 160, 192 });
    staticObjects.push_back(obj);
    obj = new Wall_cRightOut_top({ 224, 224 });
    staticObjects.push_back(obj);
    obj = new Wall_cLeftOut_top({ 192, 224 });
    staticObjects.push_back(obj);
    obj = new Wall_cLeftOut_bottom({ 192, 256 });
    staticObjects.push_back(obj);
    obj = new Wall_cRightOut_bottom({ 224, 256 });
    staticObjects.push_back(obj);
    obj = new Wall_high_bRight({ 320, 320 });
    staticObjects.push_back(obj);
    obj = new Wall_high_top({ 288, 320 });
    staticObjects.push_back(obj);
    obj = new Wall_high_top({ 256, 320 });
    staticObjects.push_back(obj);
    obj = new Wall_high_rTop({ 192, 160 });
    staticObjects.push_back(obj);
    obj = new Wall_high_right({ 224, 192 });
    staticObjects.push_back(obj);
    obj = new Wall_high_right({ 96, 224 });
    staticObjects.push_back(obj);
    obj = new Wall_high_left({ 192, 192 });
    staticObjects.push_back(obj);
    obj = new Wall_high_right({ 96, 256 });
    staticObjects.push_back(obj);
    obj = new Wall_high_right({ 384, 256 });
    staticObjects.push_back(obj);
    obj = new Wall_high_lTop({ 96, 160 });
    staticObjects.push_back(obj);
    obj = new Wall_high_top({ 160, 320 });
    staticObjects.push_back(obj);
    obj = new Wall_high_top({ 192, 320 });
    staticObjects.push_back(obj);
    obj = new Wall_high_right({ 224, 160 });
    staticObjects.push_back(obj);
    obj = new Wall_high_top({ 384, 256 });
    staticObjects.push_back(obj);
    obj = new Wall_high_left({ 352, 256 });
    staticObjects.push_back(obj);
    obj = new Wall_high_lBottom({ 384, 288 });
    staticObjects.push_back(obj);
    obj = new Wall_high_rBottom({ 480, 288 });
    staticObjects.push_back(obj);
    obj = new Wall_high_left({ 480, 256 });
    staticObjects.push_back(obj);
    obj = new Wall_high_top({ 224, 320 });
    staticObjects.push_back(obj);
    obj = new Wall_high_bLeft({ 128, 320 });
    staticObjects.push_back(obj);
    obj = new Wall_high_bLeft({ 416, 320 });
    staticObjects.push_back(obj);
    obj = new Wall_high_rBottom({ 352, 288 });
    staticObjects.push_back(obj);
    obj = new Wall_high_lBottom({ 96, 288 });
    staticObjects.push_back(obj);
    obj = new Wall_high_top({ 352, 256 });
    staticObjects.push_back(obj);
    obj = new Wall_high_right({ 96, 192 });
    staticObjects.push_back(obj);
    obj = new Wall_high_rTop({ 480, 128 });
    staticObjects.push_back(obj);
    obj = new Wall_high_bRight({ 448, 320 });
    staticObjects.push_back(obj);
    obj = new Wall_high_right({ 352, 32 });
    staticObjects.push_back(obj);
    obj = new Wall_high_right({ 352, 0 });
    staticObjects.push_back(obj);
    obj = new Wall_high_left({ 480, 224 });
    staticObjects.push_back(obj);
    obj = new Wall_high_left({ 480, 192 });
    staticObjects.push_back(obj);
    obj = new Wall_high_left({ 480, 160 });
    staticObjects.push_back(obj);
    obj = new Wall_high_left({ 416, 96 });
    staticObjects.push_back(obj);
    obj = new Wall_high_lTop({ 224, 128 });
    staticObjects.push_back(obj);
    obj = new Wall_high_left({ 416, 64 });
    staticObjects.push_back(obj);
    obj = new Wall_high_left({ 416, 32 });
    staticObjects.push_back(obj);
    obj = new Wall_high_left({ 416, 0 });
    staticObjects.push_back(obj);
    obj = new Wall_high_right({ 352, 96 });
    staticObjects.push_back(obj);
    obj = new Wall_high_right({ 352, 64 });
    staticObjects.push_back(obj);

    sort(staticObjects.begin(), staticObjects.end(), isLower);

    //Hitboxes
    staticSolidMap.push_back(new hitbox(96, 160, 32, 160));
    staticSolidMap.push_back(new hitbox(128, 128, 64, 96));
    staticSolidMap.push_back(new hitbox(192, 128, 64, 160));
    staticSolidMap.push_back(new hitbox(352, 256, 64, 96));
    staticSolidMap.push_back(new hitbox(128, 320, 352, 32));
    staticSolidMap.push_back(new hitbox(480, 128, 32, 192));
    staticSolidMap.push_back(new hitbox(256, 0, 128, 192));
    staticSolidMap.push_back(new hitbox(416, 0, 64, 192));
    staticSolidMap.push_back(new hitbox(260.5, 224.5, 20.5, -9));

    //Leave points
    staticLeavePoints.push_back(new LeavePoint(hitbox{ 380.5, -6, 39.5, 16.5 }, 2, 0));

    //Triggers
    Trigger* trig;
}